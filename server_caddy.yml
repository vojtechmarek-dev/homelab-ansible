---
- name: Deploy Caddy as a Private Reverse Proxy
  hosts: homelab-thinkcentre
  become: yes

  vars:
    domain: vojtechmarek.dev
    # Path on the server where the Caddy project will live
    project_path: "/srv/caddy"
    # Path ON THE HOST for our Caddyfile.
    caddyfile_on_host: "{{ project_path }}/Caddyfile"
    caddy_build_path: "/srv/caddy/build"
    cloudflare_token_from_vault: "{{ secrets.cloudflare_api_token }}"

  tasks:
    - name: Ensure the Caddy project directory exists
      ansible.builtin.file:
        path: "{{ project_path }}"
        state: directory
        mode: '0755'

    - name: Copy the Caddy Dockerfile to the server
      ansible.builtin.copy:
        src: templates/caddy/build/ # This copies the entire 'caddy' directory
        dest: "{{ caddy_build_path }}"
        mode: '0644'

    - name: Build the custom Caddy image with the Cloudflare plugin
      community.docker.docker_image:
        name: caddy-custom # The name for our new image
        tag: latest
        build:
          path: "{{ caddy_build_path }}" # The directory containing the Dockerfile
        source: build
        state: present
      # This task needs to be run by a user in the docker group
      # become: no
    
    - name: Copy the Caddyfile template to the server
      ansible.builtin.template:
        src: templates/caddy/Caddyfile.private.j2
        dest: "{{ caddyfile_on_host }}"
        mode: '0644'
      notify: Reload Caddy

    - name: Copy the Docker Compose template to the server
      ansible.builtin.template:
        # We pass the host path of the Caddyfile into the template
        src: templates/caddy/docker-compose.yml.j2
        dest: "{{ project_path }}/docker-compose.yml"
        mode: '0644'
      notify: Restart Caddy Service # A change to the compose file needs a full restart

    - name: Ensure the Caddy service is running
      community.docker.docker_compose_v2:
        project_src: "{{ project_path }}"
        state: present

  handlers:
    # Handler for when the Caddyfile itself changes (no container restart needed)
    - name: Reload Caddy
      listen: "Reload Caddy"
      community.docker.docker_container_exec:
        container: caddy
        command: caddy reload --config /etc/caddy/Caddyfile

    # Handler for when the docker-compose.yml file changes (container must be recreated)
    - name: Restart Caddy Service
      listen: "Restart Caddy Service"
      community.docker.docker_compose_v2:
        project_src: "{{ project_path }}"
        state: present # Re-running with 'present' will apply the compose file changes